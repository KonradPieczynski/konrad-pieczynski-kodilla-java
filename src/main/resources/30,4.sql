CREATE TABLE IF NOT EXISTS READERS_AUD (
   EVENT_ID INT NOT NULL AUTO_INCREMENT,
   EVENT_DATE DATETIME NOT NULL,
   EVENT_TYPE VARCHAR(10) DEFAULT NULL,
   READER_ID INT NOT NULL,
   OLD_FIRSTNAME VARCHAR(255),
   NEW_FIRSTNAME VARCHAR(255),
   OLD_LASTNAME VARCHAR(255),
   NEW_LASTNAME VARCHAR(255),
   OLD_PESELID INT,
   NEW_PESELID INT,
   OLD_VIP_LEVEL boolean,
   NEW_VIP_LEVEL boolean,
   PRIMARY KEY (EVENT_ID)
);

CREATE TABLE IF NOT EXISTS BOOKS_AUD (
   EVENT_ID INT NOT NULL AUTO_INCREMENT,
   EVENT_DATE DATETIME NOT NULL,
   EVENT_TYPE VARCHAR(10) DEFAULT NULL,
   BOOK_ID INT NOT NULL,
   OLD_TITLE VARCHAR(255),
   NEW_TITLE VARCHAR(255),
   OLD_PUBYEAR INT,
   NEW_PUBYEAR INT,
   OLD_BESTSELLER boolean,
   NEW_BESTSELLER boolean,
   PRIMARY KEY (EVENT_ID)
);

DROP TRIGGER IF EXISTS READERS_INSERT;

DELIMITER $$

CREATE TRIGGER READERS_INSERT AFTER INSERT ON READERS
FOR EACH ROW
BEGIN
   INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, NEW_FIRSTNAME, NEW_LASTNAME, NEW_PESELID, NEW_VIP_LEVEL)
      VALUE(CURTIME(), "INSERT", NEW.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESELID, NEW.VIP_LEVEL);
END $$

DELIMITER ;

DROP TRIGGER IF EXISTS READERS_DELETE;

DELIMITER $$

CREATE TRIGGER READERS_DELETE AFTER DELETE ON READERS
FOR EACH ROW
BEGIN
   INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, OLD_FIRSTNAME, OLD_LASTNAME,
                          OLD_PESELID, OLD_VIP_LEVEL)
      VALUE(CURTIME(), "DELETE", OLD.READER_ID, OLD.FIRSTNAME, OLD.LASTNAME, OLD.PESELID, OLD.VIP_LEVEL);
END $$

DELIMITER ;

DROP TRIGGER IF EXISTS READERS_UPDATE;

DELIMITER $$

CREATE TRIGGER READERS_UPDATE AFTER UPDATE ON READERS
FOR EACH ROW
BEGIN
   INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, OLD_FIRSTNAME, OLD_LASTNAME,OLD_PESELID, OLD_VIP_LEVEL,
                          NEW_FIRSTNAME, NEW_LASTNAME, NEW_PESELID, NEW_VIP_LEVEL)
						  VALUE(CURTIME(), "UPDATE", OLD.READER_ID, OLD.FIRSTNAME, OLD.LASTNAME, OLD.PESELID, OLD.VIP_LEVEL,
						  NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESELID, NEW.VIP_LEVEL);
END $$

DELIMITER ;

DROP TRIGGER IF EXISTS BOOKS_INSERT;

DELIMITER $$

CREATE TRIGGER BOOKS_INSERT AFTER INSERT ON BOOKS
FOR EACH ROW
BEGIN
   INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, NEW_TITLE, NEW_PUBYEAR, NEW_BESTSELLER)
			       VALUE(CURTIME(), "INSERT", NEW.BOOK_ID, NEW.TITLE, NEW.PUBYEAR, NEW.BESTSELLER);
END $$

DELIMITER ;

DROP TRIGGER IF EXISTS BOOKS_DELETE;

DELIMITER $$

CREATE TRIGGER BOOKS_DELETE AFTER DELETE ON BOOKS
FOR EACH ROW
BEGIN
   INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, OLD_TITLE, OLD_PUBYEAR, OLD_BESTSELLER)
					VALUE(CURTIME(), "DELETE", OLD.BOOK_ID, OLD.TITLE, OLD.PUBYEAR, OLD.BESTSELLER);
END $$

DELIMITER ;

DROP TRIGGER IF EXISTS BOOKS_UPDATE;

DELIMITER $$

CREATE TRIGGER BOOKS_UPDATE AFTER UPDATE ON BOOKS
FOR EACH ROW
BEGIN
   INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, OLD_TITLE, OLD_PUBYEAR,
                          OLD_BESTSELLER, NEW_TITLE, NEW_PUBYEAR, NEW_BESTSELLER)
      VALUE(CURTIME(), "UPDATE", OLD.BOOK_ID, OLD.TITLE, OLD.PUBYEAR, OLD.BESTSELLER,
                                              NEW.TITLE, NEW.PUBYEAR, NEW.BESTSELLER);
END $$

DELIMITER ;